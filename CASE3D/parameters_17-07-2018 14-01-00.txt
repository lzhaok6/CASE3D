Code name: 3Dbarge_TFM_Abaqus_sym_mesh
Simulation date and time: 17-07-2018 14-01-00
Mesh information:
N: 1 mesh size:  wetted surface number: 4 Nodenumber: 5660 Element number: 4576 h/p refinement rate: 1
Explosive information: 
stdoff point (spherical): 0 -1.2192 2.4384 explosion center: 0 -9.144 5.4864 peak pressure (Mpa): 1.62207e+07 decay rate: 0.000320779 WAVE (1: plane, 2: spherical): 2
Time integration information
CFL: 0.5 dt: 4.78947e-05 dt scale factor: 1 total time: 0.08 damping: 0.25 explicit central difference (Leap frog)
Fluid properties: 
CAV: 1 C: 1500 RHO: 1025 atmospheric pressure: 101300 saturated pressure: 0
FSI coupling
mapping algorithm: 2
debug mode: 0
total CPU time: 0.008




			#pragma omp parallel for num_threads(6) private(gamman, gamma_tn)
			for (int j = 0; j < NEL; j++) { //takes 2*NEL+2 operations 
				for (int ii = 0; ii < NINT; ii++) { //p NEL*(2*NINT+2) operations
					for (int h = 0; h < NINT; h++) { //j,i,i //takes NEL*NINT*(2*NINT+2) operations
						for (int z = 0; z < NINT; z++) { //k,k,j //takes NEL*NINT^2*(2*NINT+2) operations
							gamman[3 * counter1[ii*NINT*NINT + h*NINT + z] + 0] = 0.0;
							gamman[3 * counter2[ii*NINT*NINT + h*NINT + z] + 1] = 0.0;
							gamman[3 * counter3[ii*NINT*NINT + h*NINT + z] + 2] = 0.0;
							for (int q = 0; q < NINT; q++) { //q (recurrent addition in this dimension) //takes NEL*NINT^3*(2*NINT+2) operations	
								gamman[3 * counter1[ii*NINT*NINT + h*NINT + z] + 0] += SHOD1[q*NINT + ii] * FEE[IENct1[j*NINT*NINT*NINT + h*NINT*NINT + z*NINT + q]][1];
								gamman[3 * counter2[ii*NINT*NINT + h*NINT + z] + 1] += SHOD1[q*NINT + ii] * FEE[IENct2[j*NINT*NINT*NINT + h*NINT*NINT + z*NINT + q]][1];
								gamman[3 * counter3[ii*NINT*NINT + h*NINT + z] + 2] += SHOD1[q*NINT + ii] * FEE[IENct3[j*NINT*NINT*NINT + h*NINT*NINT + z*NINT + q]][1];
							}
							//ctt1 += 1;
						}
					}
				}
				//takes 15*NINT^3*NEL FLOP
				for (int ii = 0; ii < NINT*NINT*NINT; ii++) { //takes NEL*(2 * NINT + 2) operations
					gamma_tn[3 * ii + 0] = Gn[j][0][0][ii] * gamman[3 * ii + 0] + Gn[j][0][1][ii] * gamman[3 * ii + 1] + Gn[j][0][2][ii] * gamman[3 * ii + 2];
					//ipk
					gamma_tn[3 * ii + 1] = Gn[j][1][1][ii] * gamman[3 * ii + 1] + Gn[j][0][1][ii] * gamman[3 * ii + 0] + Gn[j][1][2][ii] * gamman[3 * ii + 2];
					//ijp
					gamma_tn[3 * ii + 2] = Gn[j][2][2][ii] * gamman[3 * ii + 2] + Gn[j][0][2][ii] * gamman[3 * ii + 0] + Gn[j][1][2][ii] * gamman[3 * ii + 1];
					//oc += 15;
				}

				//takes 6*NINT^4*NEL FLOP
				//ctt2 = 0;
				for (int h = 0; h < NINT; h++) {  //i //takes NEL*NINT*(2*NINT+2) operations
					for (int k = 0; k < NINT; k++) { //j  //takes NEL*NINT^2*(2*NINT+2) operations
						for (int z = 0; z < NINT; z++) { //k //takes NEL*NINT^3*(2*NINT+2) operations
							HFTEMPn[j][LNAct3[h*NINT*NINT + k*NINT + z]] = 0.0;
							for (int ii = 0; ii < NINT; ii++) { //p (recurrent addition) //p NEL*(2*NINT+2) operations
								HFTEMPn[j][LNAct3[h*NINT*NINT + k*NINT + z]] += SHOD1[h*NINT + ii] * gamma_tn[3 * (ii*NINT*NINT + k*NINT + z) + 0] + SHOD1[k*NINT + ii] * gamma_tn[3 * (h*NINT*NINT + ii*NINT + z) + 1] + SHOD1[z*NINT + ii] * gamma_tn[3 * (h*NINT*NINT + k*NINT + ii) + 2];
							}
							//ctt2 += 1;
						}
					}
				}
			}
